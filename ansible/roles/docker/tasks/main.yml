---
# tasks file for docker

- name: Check OS Version
  debug: var=ansible_os_family
- block:
    - name: Upgrade Index
      apt:
        upgrade: dist
    - name: Install required system packages
      apt:
        name: "{{ packages }}"

        state: latest
        update_cache: true
  when: ansible_os_family == "Debian"

- block:
    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    - name: "Ansible | Print 'lsb_release'"
      debug:
        msg: "{{ ansible_distribution_release }}"

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu jammy stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: true

    - name: Install Docker Module for Python
      pip:
        name: docker
      notify:
        - Give Access to user

  when: ansible_os_family == "Debian"
  notify:
    - Restart Docker
- block:
    - name: Pull default Docker image
      community.docker.docker_image:
        name: "{{ default_container_image }}"
        source: pull

    - name: Create default containers
      community.docker.docker_container:
        name: "{{ default_container_name }}{{ item }}"
        image: "{{ default_container_image }}"
        command: "{{ default_container_command }}"
        state: present
      with_sequence: count={{ container_count }}
  when: ansible_os_family == "Debian"

- block:
    - name: Waiting
      shell: sleep 10
    - name: Delete Containers
      docker_container:
        name: "{{ default_container_name }}{{ item }}"
        state: absent
      with_sequence: count={{ container_count }}

  when: ansible_os_family == "Debian"

  # - block:
  #     - name: Docker install
  #       apt:
  #         name: docker
  #         state: latest
  #   when: ansible_os_family == "Debian"
  # - block:
  #     - name: Start docker container
  #       docker_container:
  #         name: my_container
  #         state: started
  #         image: nginx:latest
  #         pull: true
  #         ports:
  #           - "5000:5000"

  # - name: Remove docker container
  #   docker_container:
  #     name: my_container
  #     state: absent
